name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build app
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
          - os: macos-12
          - os: windows-2019

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.2'

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.8.3'

      - name: Install dependencies
        run: poetry install
      
      - name: Build
        run: poetry run build
      
      - name: Rename build app
        run: |
          if [ "${{ matrix.config.os }}" == 'windows-2019' ]; then
            mv ./dist/__init__.exe ./dist/Pyneko.exe
          elif [ "${{ matrix.config.os }}" == 'ubuntu-22.04' ]; then
            mv ./dist/__init__ ./dist/Pyneko
          elif [ "${{ matrix.config.os }}" == 'macos-12' ]; then
            mv ./dist/__init__.app ./dist/Pyneko.app
          fi
          mv ./dist ./dist-${{ matrix.config.os }}
      
      - name: Upload result job ${{ matrix.config.os }}
        uses: actions/upload-artifact@v2
        with:
          name: pyneko-pyinstaller-artifact
          path: ./dist*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: pyneko-pyinstaller-artifact

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            dist-windows-*/Pyneko.exe
            dist-ubuntu-*/Pyneko
            dist-macos-*/Pyneko.app
