name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build app
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
          - os: macos-12
          - os: windows-2019

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.2'

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.8.3'

      - name: Create non-root user (Linux and MacOS)
        if: ${{ matrix.config.os != 'windows-2019' }}
        run: |
          sudo useradd -m builduser
          sudo chown -R builduser:builduser .
          sudo chmod -R 755 .

      - name: Install dependencies (Linux and MacOS)
        if: ${{ matrix.config.os != 'windows-2019' }}
        run: sudo -u builduser -H poetry install

      - name: Build (Linux and MacOS)
        if: ${{ matrix.config.os != 'windows-2019' }}
        run: sudo -u builduser -H poetry run build
      
      - name: Install dependencies windows
        if: ${{ matrix.config.os == 'windows-2019' }}
        run: sudo -u builduser -H poetry install

      - name: Build windows
        if: ${{ matrix.config.os == 'windows-2019' }}
        run: poetry run build

      - name: Rename build app for Windows
        if: ${{ matrix.config.os == 'windows-2019' }}
        run: mv ./dist/__init__.exe ./dist/Pyneko.exe

      - name: Rename build app for Ubuntu
        if: ${{ matrix.config.os == 'ubuntu-22.04' }}
        run: mv ./dist/__init__ ./dist/Pyneko

      - name: Move build directory
        run: mv ./dist ./dist-${{ matrix.config.os }}

      - name: Upload result job ${{ matrix.config.os }}
        uses: actions/upload-artifact@v2
        with:
          name: pyneko-pyinstaller-artifact
          path: ./dist-${{ matrix.config.os }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: pyneko-pyinstaller-artifact
        
      - name: Zip file macos
        run: zip -r pyneko_macos.zip __init__.app __init__

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            Pyneko.exe
            Pyneko
            pyneko_macos.zip
